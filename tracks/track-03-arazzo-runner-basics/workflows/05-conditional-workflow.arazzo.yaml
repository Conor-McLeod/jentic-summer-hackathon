arazzo: 1.0.0
info:
  title: Conditional Logic Workflow
  description: Advanced workflow demonstrating conditional execution and branching logic
  version: 1.0.0

workflows:
  - workflowId: smartContentProcessor
    description: Process content intelligently based on type and quality
    inputs:
      type: object
      properties:
        content_url:
          type: string
          format: uri
          description: URL of content to analyze and process
          example: "https://example.com/article"
        processing_mode:
          type: string
          description: Processing mode preference
          default: "auto"
          enum: ["auto", "fast", "thorough", "creative"]
        quality_threshold:
          type: number
          description: Minimum quality score for enhanced processing
          default: 0.7
          minimum: 0.0
          maximum: 1.0
        target_audience:
          type: string
          description: Target audience for content adaptation
          default: "general"
          enum: ["general", "technical", "academic", "casual"]
      required: [content_url]

    steps:
      - stepId: fetchContent
        description: Fetch and analyze the content
        operationRef: '#/operations/fetchAndAnalyzeContent'
        parameters:
          url: $inputs.content_url
          analysis_depth: $inputs.processing_mode
        outputs:
          content_text: $response.body.content
          content_type: $response.body.type
          quality_score: $response.body.quality_score
          word_count: $response.body.word_count
          language: $response.body.language
          topics: $response.body.topics

      - stepId: determineProcessingPath
        description: Decide which processing path to take based on content analysis
        operationRef: '#/operations/analyzeProcessingNeeds'
        parameters:
          content_type: $steps.fetchContent.outputs.content_type
          quality_score: $steps.fetchContent.outputs.quality_score
          word_count: $steps.fetchContent.outputs.word_count
          quality_threshold: $inputs.quality_threshold
          processing_mode: $inputs.processing_mode
        dependsOn: [fetchContent]
        outputs:
          processing_strategy: $response.body.strategy
          estimated_time: $response.body.estimated_time_seconds
          requires_enhancement: $response.body.requires_enhancement
          recommended_tools: $response.body.recommended_tools

      # High-quality content path
      - stepId: enhancedProcessing
        description: Enhanced processing for high-quality content
        operationRef: '#/operations/performEnhancedProcessing'
        parameters:
          content: $steps.fetchContent.outputs.content_text
          topics: $steps.fetchContent.outputs.topics
          target_audience: $inputs.target_audience
          processing_tools: $steps.determineProcessingPath.outputs.recommended_tools
        condition: $steps.determineProcessingPath.outputs.requires_enhancement == true
        dependsOn: [determineProcessingPath]
        outputs:
          enhanced_content: $response.body.enhanced_content
          enhancements_applied: $response.body.enhancements
          quality_improvement: $response.body.quality_delta

      # Standard processing path
      - stepId: standardProcessing
        description: Standard processing for regular content
        operationRef: '#/operations/performStandardProcessing'
        parameters:
          content: $steps.fetchContent.outputs.content_text
          content_type: $steps.fetchContent.outputs.content_type
          target_audience: $inputs.target_audience
        condition: $steps.determineProcessingPath.outputs.requires_enhancement == false
        dependsOn: [determineProcessingPath]
        outputs:
          processed_content: $response.body.processed_content
          processing_applied: $response.body.processing_methods

      # Conditional translation (only for non-English content)
      - stepId: translateContent
        description: Translate content to English if needed
        operationRef: '#/operations/translateToEnglish'
        parameters:
          content: $steps.enhancedProcessing.outputs.enhanced_content || $steps.standardProcessing.outputs.processed_content
          source_language: $steps.fetchContent.outputs.language
        condition: $steps.fetchContent.outputs.language != "en"
        dependsOn: [enhancedProcessing, standardProcessing]
        outputs:
          translated_content: $response.body.translated_text
          translation_confidence: $response.body.confidence_score

      # Content summarization (only for long content)
      - stepId: summarizeContent
        description: Create summary for long content
        operationRef: '#/operations/createSummary'
        parameters:
          content: $steps.translateContent.outputs.translated_content || $steps.enhancedProcessing.outputs.enhanced_content || $steps.standardProcessing.outputs.processed_content
          word_count: $steps.fetchContent.outputs.word_count
          summary_length: "medium"
        condition: $steps.fetchContent.outputs.word_count > 1000
        dependsOn: [translateContent, enhancedProcessing, standardProcessing]
        outputs:
          summary: $response.body.summary
          key_points: $response.body.key_points
          summary_ratio: $response.body.compression_ratio

      # Final optimization based on target audience
      - stepId: optimizeForAudience
        description: Optimize content for target audience
        operationRef: '#/operations/audienceOptimization'
        parameters:
          content: $steps.summarizeContent.outputs.summary || $steps.translateContent.outputs.translated_content || $steps.enhancedProcessing.outputs.enhanced_content || $steps.standardProcessing.outputs.processed_content
          target_audience: $inputs.target_audience
          original_topics: $steps.fetchContent.outputs.topics
          content_metadata:
            quality_score: $steps.fetchContent.outputs.quality_score
            word_count: $steps.fetchContent.outputs.word_count
            language: $steps.fetchContent.outputs.language
        dependsOn: [summarizeContent, translateContent, enhancedProcessing, standardProcessing]
        outputs:
          optimized_content: $response.body.optimized_content
          audience_adaptations: $response.body.adaptations_made
          readability_score: $response.body.readability_score

      # Quality assurance check
      - stepId: qualityCheck
        description: Final quality assurance check
        operationRef: '#/operations/performQualityCheck'
        parameters:
          final_content: $steps.optimizeForAudience.outputs.optimized_content
          original_quality: $steps.fetchContent.outputs.quality_score
          processing_chain: 
            - enhanced: $steps.enhancedProcessing.outputs.enhancements_applied || []
            - standard: $steps.standardProcessing.outputs.processing_applied || []
            - translated: $steps.translateContent.outputs.translation_confidence || null
            - summarized: $steps.summarizeContent.outputs.summary_ratio || null
            - optimized: $steps.optimizeForAudience.outputs.audience_adaptations || []
        dependsOn: [optimizeForAudience]
        outputs:
          final_quality_score: $response.body.quality_score
          quality_improvement: $response.body.improvement_percentage
          processing_report: $response.body.processing_summary
          recommendations: $response.body.recommendations

operations:
  - operationId: fetchAndAnalyzeContent
    method: POST
    url: https://httpbin.org/post
    description: Fetch content from URL and perform initial analysis
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
                format: uri
              analysis_depth:
                type: string
                enum: ["auto", "fast", "thorough", "creative"]
              include_metadata:
                type: boolean
                default: true
            required: [url]

  - operationId: analyzeProcessingNeeds
    method: POST
    url: https://httpbin.org/post
    description: Analyze content to determine optimal processing strategy
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              content_type:
                type: string
              quality_score:
                type: number
              word_count:
                type: integer
              quality_threshold:
                type: number
              processing_mode:
                type: string
            required: [content_type, quality_score]

  - operationId: performEnhancedProcessing
    method: POST
    url: https://httpbin.org/post
    description: Perform enhanced processing for high-quality content
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: string
              topics:
                type: array
                items:
                  type: string
              target_audience:
                type: string
              processing_tools:
                type: array
                items:
                  type: string
            required: [content]

  - operationId: performStandardProcessing
    method: POST
    url: https://httpbin.org/post
    description: Perform standard processing for regular content
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: string
              content_type:
                type: string
              target_audience:
                type: string
            required: [content]

  - operationId: translateToEnglish
    method: GET
    url: https://api.funtranslations.com/translate/shakespeare.json
    description: Translate content to English (using Fun Translations as example)
    parameters:
      - name: text
        in: query
        required: true
        schema:
          type: string
        description: Text to translate

  - operationId: createSummary
    method: POST
    url: https://httpbin.org/post
    description: Create summary of long content
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: string
              word_count:
                type: integer
              summary_length:
                type: string
                enum: ["short", "medium", "long"]
                default: "medium"
              extract_key_points:
                type: boolean
                default: true
            required: [content]

  - operationId: audienceOptimization
    method: POST
    url: https://httpbin.org/post
    description: Optimize content for specific target audience
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: string
              target_audience:
                type: string
              original_topics:
                type: array
                items:
                  type: string
              content_metadata:
                type: object
            required: [content, target_audience]

  - operationId: performQualityCheck
    method: POST
    url: https://httpbin.org/post
    description: Perform final quality assurance check
    headers:
      Content-Type: application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              final_content:
                type: string
              original_quality:
                type: number
              processing_chain:
                type: array
                items:
                  type: object
              quality_metrics:
                type: object
                properties:
                  check_grammar:
                    type: boolean
                    default: true
                  check_readability:
                    type: boolean
                    default: true
                  check_coherence:
                    type: boolean
                    default: true
            required: [final_content]